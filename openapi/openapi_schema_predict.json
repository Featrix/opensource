{
  "openapi": "3.0.0",
  "info": {
    "title": "Featrix API",
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "https://app.featrix.com/api",
      "description": "Featrix production API"
    }
  ],
  "paths": {
    "/mosaic/keyauth/jwt": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Auth Api Key",
        "description": "The client id tells us which user is calling us, while the secret is the permission key. An api key is an org construct, so it gives us access to the org, while the client id tells us the user -- so the combination gives us the right fidelity on who is asking for\npermission.\n\nArgs:\n    data (ApiKeyAuthenticationRequest): the request with the client secret and client id\nReturns:\n    str: JWT created",
        "operationId": "auth_api_key_mosaic_keyauth_jwt_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKeyAuthenticationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyAuthResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/neural/models/prediction": {
      "post": {
        "tags": ["Models"],
        "summary": "Fast Predict",
        "description": "This is the fast prediction path",
        "operationId": "fast_predict_neural_models_prediction_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelFastPredictionArgs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/featrix__models__db__prediction__Prediction"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "security": [
      {
        "BearerAuth": []
      }
    ],
    "schemas": {
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "JobType": {
        "type": "string",
        "enum": ["model-prediction"],
        "title": "JobType",
        "description": "JobType is set automatically in the JobArgs classes for submitting new jobs.  It will also appear in the JobMeta database object describing a job that was submitted."
      },
      "ApiKeyAuthResponse": {
        "properties": {
          "jwt": {
            "type": "string",
            "title": "Jwt"
          },
          "expiration": {
            "type": "string",
            "format": "date-time",
            "title": "Expiration"
          }
        },
        "type": "object",
        "required": ["jwt", "expiration"],
        "title": "ApiKeyAuthResponse"
      },
      "ApiKeyAuthenticationRequest": {
        "properties": {
          "client_id": {
            "type": "string",
            "title": "Client Id"
          },
          "client_secret": {
            "type": "string",
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": ["client_id", "client_secret"],
        "title": "ApiKeyAuthenticationRequest"
      },
      "ModelFastPredictionArgs": {
        "properties": {
          "job_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobType"
              }
            ],
            "description": "A Prediction on Model Job. The JobType should not be changed",
            "default": "model-prediction"
          },
          "model_id": {
            "anyOf": [
              {
                "type": "string",
                "example": "5eb7cf5a86d9755df3a6c593"
              }
            ],
            "title": "Neural Function ID",
            "description": "The ID of the model to use for the prediction"
          },
          "query": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Queries",
            "description": "A list of queries to perform, each query is a dictionary with the column name as the key."
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": ["model_id", "query"],
        "title": "ModelFastPredictionArgs",
        "description": "This supports doing fast predictions"
      },
      "featrix__models__db__prediction__Prediction": {
        "properties": {
          "_id": {
            "type": "string",
            "title": " Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "organization_id": {
            "type": "string",
            "title": "Organization Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "project_id": {
            "type": "string",
            "title": "Project Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "embedding_space_id": {
            "type": "string",
            "title": "Embedding Space Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "pathname": {
            "anyOf": [
              {
                "type": "string"
              }
            ],
            "title": "Pathname"
          },
          "query": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Query"
          },
          "debug_info": {
            "anyOf": [
              {
                "type": "object"
              }
            ],
            "title": "Debug Info"
          },
          "result": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              }
            ],
            "title": "Result"
          }
        },
        "type": "object",
        "required": [
          "organization_id",
          "project_id",
          "embedding_space_id",
          "model_id"
        ],
        "title": "Prediction"
      }
    }
  }
}
